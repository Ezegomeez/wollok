
class Bird {
	var energy = 1000

	method fly(kms) {
		energy -= kms
	} 
	requires 
		kms > 0 : 'Cannot fly negative distances'
		energy >= kms : 'Cannot fly more than its energy $energy'
	
}
test "simplePreConditionForSingleParameterInClass" {
	const b = new Bird()
	try
		b.fly(0)
	catch e	{
		assert.equals('Method requirements not met: Cannot fly negative distances (kms > 0)', e.getMessage())
	}
}

test "secondPreConditionForSingleParameterInClass" {
	const b = new Bird()
	try
		b.fly(2000)
	catch e	{
		assert.equals('Method requirements not met: Cannot fly more than its energy $energy (energy >= kms)', e.getMessage())
	}
}