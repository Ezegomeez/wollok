package org.uqbar.project.wollok.tests.quickfix

import org.junit.Test
import org.uqbar.project.wollok.ui.Messages

class QuickFixTest extends AbstractWollokQuickFixTestCase {
	@Test
	def changeDeclarationToVar(){
		val initial = #['''
			object myObj{
				method someMethod(){
					const x = 23
					x = 25
				}
			}
		''']

		val result = #['''
			object myObj{
				method someMethod(){
					var x = 23
					x = 25
				}
			}
		''']
		assertQuickfix(initial, result, Messages.WollokDslQuickfixProvider_changeToVar_name)		
	}
	
	@Test
	def addOverrideToMethod(){
		val initial = #['''
			class MyClass{
				method someMethod(){
				}
			}
			
			class MySubclass inherits MyClass {
				method someMethod(){
				}				
			}
		''']

		val result = #['''
			class MyClass{
				method someMethod(){
				}
			}
			
			class MySubclass inherits MyClass {
				override method someMethod(){
				}				
			}
		''']
		assertQuickfix(initial, result, 'Add "override" keyword')		
	}

	@Test
	def removeOverrideToMethod(){
		val initial = #['''
			class MyClass{
			}
			
			class MySubclass inherits MyClass {
				override method someMethod(){
				}				
			}
		''']

		val result = #['''
			class MyClass{
			}
			
			class MySubclass inherits MyClass {
				 method someMethod(){
				}				
			}
		''']
		assertQuickfix(initial, result, 'Remove override keyword')		
	}
	@Test
	def addMethodToSuperclass(){
		val initial = #['''
			class MyClass{
			}
			
			class MySubclass inherits MyClass {
				override method someMethod(){
				}				
			}
		''']

		val result = #['''
			class MyClass{
				method someMethod(){
					//TODO: Autogenerated Code ! 
				}
			}
			
			class MySubclass inherits MyClass {
				override method someMethod(){
				}				
			}
		''']
		assertQuickfix(initial, result, 'Create method in superclass')		
	}
}