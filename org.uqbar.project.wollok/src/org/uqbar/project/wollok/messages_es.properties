# 
# Validations
# 

WollokDslValidator_CLASS_NAME_MUST_START_UPPERCASE= El nombre debe de clase comenzar en mayúscula
WollokDslValidator_REFERENCIABLE_NAME_MUST_START_LOWERCASE= El nombre de la referencia debe comenzar en minúscula
WollokDslValidator_CANNOT_INSTANTIATE_ABSTRACT_CLASS= Imposible instanciar una clase abstracta
WollokDslValidator_WCONSTRUCTOR_CALL__ARGUMENTS= Número de argumentos incorrecto. Debe ser 
WollokDslValidator_METHOD_NOT_OVERRIDING= Este método no sobrescribe ningún método
WollokDslValidator_METHOD_MUST_HAVE_OVERRIDE_KEYWORD= Debe marcarse con 'override', ya que sobrescribe un método de sus superclases
WollokDslValidator_CANNOT_MODIFY_VAL= No se puede modificar una valor
WollokDslValidator_DUPLICATED_METHOD= Método duplicado
WollokDslValidator_DUPLICATED_NAME= Nombre duplicado
WollokDslValidator_METHOD_ON_THIS_DOESNT_EXIST= El método no existe o número incorrecto de argumentos
WollokDslValidator_WARN_VARIABLE_NEVER_ASSIGNED= Esta variable nunca se asigna
WollokDslValidator_ERROR_VARIABLE_NEVER_ASSIGNED= Variable is never assigned
WollokDslValidator_VARIABLE_NEVER_USED= Esta variable nunca se utiliza
WollokDslValidator_SUPER_ONLY_IN_CLASSES= Sólo se puede utilizar 'super' en métodos declarados en clases
WollokDslValidator_SUPER_ONLY_OVERRIDING_METHOD= Sólo se puede utilizar 'super' en un métod que sobrescribe otro
WollokDslValidator_SUPER_INCORRECT_ARGS= Número incorrecto de argumentos a 'super'. Se espera 

WollokDslValidator_ERROR_TRY_WITHOUT_CATCH_OR_ALWAYS= El bloque 'try' debe tener al menos un 'catch' o 'then always'
WollokDslValidator_CATCH_ONLY_EXCEPTION= Solo se puede aplicar 'catch' a un objeto de tipo wollok.lang.Exception o una subclase
WollokDslValidator_POSTFIX_ONLY_FOR_VAR= sólo se puede utilizar con referencias variables
WollokDslValidator_BINARYOP_ONLY_ON_VARS= sólo se puede utilizar con referencias variables

WollokDslValidator_DUPLICATED_CLASS_IN_PACKAGE= Nombre de clase duplicado en package
WollokDslValidator_DUPLICATED_PACKAGE= Package duplicado

WollokDslValidator_PROGRAM_IN_FILE=Los programas deben estar en archivos con extensión
WollokDslValidator_CLASSES_IN_FILE= Clases y objetos se deben definir en archivos con extensión

WollokDslValidator_NATIVE_METHOD_NO_BODY= Métodos nativos no deben tener implementación
WollokDslValidator_NATIVE_METHOD_NO_OVERRIDE= Métodos nativos no deben sobrescribir
WollokDslValidator_NATIVE_METHOD_ONLY_IN_CLASSES= Métodos nativos sólo se pueden definir en clases
WollokDslValidator_NATIVE_IN_NATIVE_SUBCLASS= No se pueden tener métodso native en subclases de clases que ya son native