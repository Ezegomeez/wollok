# 
#  i18n !
# 

WollokDslValidator_CLASS_NAME_MUST_START_UPPERCASE= Class name must start with uppercase
WollokDslValidator_REFERENCIABLE_NAME_MUST_START_LOWERCASE= Referenciable name must start with lowercase
WollokDslValidator_CANNOT_INSTANTIATE_ABSTRACT_CLASS= Cannot instantiate abstract class
WollokDslValidator_WCONSTRUCTOR_CALL__ARGUMENTS= Wrong number of arguments. Should be
WollokDslValidator_METHOD_NOT_OVERRIDING= Method does not override anything
WollokDslValidator_METHOD_MUST_HAVE_OVERRIDE_KEYWORD= Method must be marked as overrides, since it overrides a superclass method
WollokDslValidator_CANNOT_MODIFY_VAL= Cannot modify values
WollokDslValidator_DUPLICATED_METHOD= Duplicated method
WollokDslValidator_DUPLICATED_NAME= Duplicated Name
WollokDslValidator_METHOD_ON_THIS_DOESNT_EXIST= Method does not exist or invalid number of arguments
WollokDslValidator_WARN_VARIABLE_NEVER_ASSIGNED= Variable is never assigned
WollokDslValidator_ERROR_VARIABLE_NEVER_ASSIGNED= Variable is never assigned
WollokDslValidator_VARIABLE_NEVER_USED= Unused variable
WollokDslValidator_SUPER_ONLY_IN_CLASSES= Super can only be used in a method belonging to a class
WollokDslValidator_SUPER_ONLY_OVERRIDING_METHOD= Super can only be used in an overriding method
WollokDslValidator_SUPER_INCORRECT_ARGS= Incorrect number of arguments for super. Expecting

WollokDslValidator_ERROR_TRY_WITHOUT_CATCH_OR_ALWAYS= Try block must specify either a 'catch' or a 'then always' clause
WollokDslValidator_CATCH_ONLY_EXCEPTION= Can only catch wollok.lang.Exception or a subclass of it
WollokDslValidator_POSTFIX_ONLY_FOR_VAR= can only be applied to variable references
WollokDslValidator_BINARYOP_ONLY_ON_VARS= can only be applied to variable references

WollokDslValidator_DUPLICATED_CLASS_IN_PACKAGE= Duplicated class name in package
WollokDslValidator_DUPLICATED_PACKAGE= Duplicated package

WollokDslValidator_PROGRAM_IN_FILE=Program should be in a file with extension
WollokDslValidator_CLASSES_IN_FILE= Classes and Objects should be defined in a file with extension

WollokDslValidator_NATIVE_METHOD_NO_BODY= Native methods cannot have a body
WollokDslValidator_NATIVE_METHOD_NO_OVERRIDE= Native methods cannot override anything
WollokDslValidator_NATIVE_METHOD_ONLY_IN_CLASSES= Native methods can only be defined in classes
WollokDslValidator_NATIVE_IN_NATIVE_SUBCLASS= Cannot declare native methods in this class since there's already a native super class in the hierarchy

WollokDslValidator_BAD_USAGE_OF_IF_AS_BOOLEAN_EXPRESSION= Bad usage of if ! You must return the condition itself without using if. Use: 
WollokDslValidator_NO_EXPRESSION_AFTER_RETURN= Unexpected expression after return

#
# Check Severity
#
CheckSeverity_ERROR=ERROR
CheckSeverity_WARN=WARN
CheckSeverity_INFO=INFO